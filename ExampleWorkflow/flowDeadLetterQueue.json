{
    "definition": {
        "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
        "actions": {
            "Delay": {
                "inputs": {
                    "interval": {
                        "count": 3,
                        "unit": "Minute"
                    }
                },
                "runAfter": {},
                "type": "Wait"
            },
            "Delay_1": {
                "inputs": {
                    "interval": {
                        "count": 3,
                        "unit": "Minute"
                    }
                },
                "runAfter": {
                    "Send_message": [
                        "SUCCEEDED"
                    ]
                },
                "type": "Wait"
            },
            "Send_message": {
                "inputs": {
                    "parameters": {
                        "entityName": "queue1",
                        "message": {
                            "contentData": "@triggerBody()?['contentData']",
                            "contentType": "@triggerBody()?['contentType']",
                            "sessionId": "@triggerBody()?['sessionId']"
                        }
                    },
                    "serviceProviderConfiguration": {
                        "connectionName": "serviceBus",
                        "operationId": "sendMessage",
                        "serviceProviderId": "/serviceProviders/serviceBus"
                    }
                },
                "runAfter": {
                    "Delay": [
                        "SUCCEEDED"
                    ]
                },
                "type": "ServiceProvider"
            }
        },
        "contentVersion": "1.0.0.0",
        "outputs": {},
        "triggers": {
            "When_messages_are_available_in_a_queue": {
                "conditions": [],
                "inputs": {
                    "parameters": {
                        "queueName": "queue1/$deadletterqueue"
                    },
                    "serviceProviderConfiguration": {
                        "connectionName": "serviceBus",
                        "operationId": "receiveQueueMessages",
                        "serviceProviderId": "/serviceProviders/serviceBus"
                    }
                },
                "splitOn": "@triggerOutputs()?['body']",
                "type": "ServiceProvider"
            }
        }
    },
    "kind": "Stateful"
}
